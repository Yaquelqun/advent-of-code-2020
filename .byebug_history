c
Helpers::Passports::PassportAggregator
Helpers::Passports::PassportFetcher
Helpers::Passports
c
Helpers::Passports
Helpers
c
aggregated_passport_inputs.last.strip
aggregated_passport_inputs.last.trim
aggregated_passport_inputs.last
aggregated_passport_inputs
c
aggregated_passports
c
aggregated_passports
raw_passport
c
"ok" << " ok"
raw_passports_input
c
shift_counter
height_counter
c
map
c
raw_password_input
args
c
(args[1]..args[2])
args[2]
args[1]
args
raw_password_input
c
report[200]
report[199]
report.count
c
File.open("#{__dir__}/inputs/#{endpoint}").readlines.map(&:chomp)
File.open("#{__dir__}/inputs/#{endpoint}").file.readlines.map(&:chomp)
File.open("#{__dir__}/inputs/#{endpoint}")
File.open("#{::RESOURCE_DIR}/inputs/#{endpoint}")
File.open("#{RESOURCE_DIR}/inputs/#{endpoint}")
File.open("#{__RESOURCE_DIR__}/inputs/#{endpoint}")
File.open("#{__RESSOURCE_DIR__}/inputs/#{endpoint}")
File.open("#{::RESSOURCE_DIR}/inputs/#{endpoint}")
File.open("#{RESSOURCE_DIR}/inputs/#{endpoint}")
File.open("#{RESSOURCE_DIT}/inputs/#{endpoint}")
File.open("../../inputs/#{endpoint}")
"../../inputs/#{endpoint}"
